{"version":3,"sources":["context/AuthContext.ts","components/loginForm/LoginForm.tsx","images/pokemon-background.jpg","pages/login/LoginPage.tsx","pages/confirm/ConfirmPage.tsx","images/card_loading.gif","pages/main/MainPage.tsx","pages/info/InfoPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["noop","AuthContext","createContext","email","login","logout","isAuthenticated","receiveOneTimePassword","oneTimePasswordReceived","LoginForm","Form","useForm","form","history","useHistory","useContext","className","name","labelCol","span","wrapperCol","initialValues","remember","autoComplete","onFinish","getFieldValue","password","push","e","notification","error","message","description","placement","Item","label","rules","required","Password","offset","type","htmlType","LoginPage","style","background","pokemon_background","backgroundRepeat","backgroundSize","backgroundPosition","Text","Typography","ConfirmPage","useState","value","setValue","useEffect","console","log","len","onChange","newValue","target","isNaN","length","Header","Layout","Content","Footer","Sider","Option","Select","Meta","Card","MainPage","cards","setCards","pageSize","setPageSize","page","setPage","totalCards","setTotalCards","sets","setSets","rarities","setRarities","subtypes","setSubtypes","types","setTypes","PokemonTCG","getAllSets","then","res","getRarities","getSubtypes","getTypes","makeQueryString","params","query","set","rarity","trim","handleFilterSubmit","a","queryString","apiURL","URL","searchParams","append","toString","fetch","headers","json","requestInfo","totalCount","data","LogoutOutlined","onClick","padding","width","breakpoint","collapsedWidth","zeroWidthTriggerStyle","position","defaultValue","showSearch","map","s","r","t","Animate","transitionName","transitionAppear","c","hoverable","cover","src","loading","borderRadius","display","alt","images","small","onLoad","currentTarget","previousSibling","remove","id","title","artist","total","showTotal","range","defaultPageSize","current","paginationPage","paginationPageSize","InfoPage","useParams","undefined","pokemonInfo","setPokemonInfo","findCardByID","card","status","subTitle","extra","RollbackOutlined","goBack","flexGrow","large","abilities","column","text","attacks","convertedEnergyCost","damage","reduce","slice","italic","flavorText","storageName","App","setEmail","setIsAuthenticated","setOneTimePasswordReceived","JSON","parse","localStorage","getItem","Provider","Error","setItem","stringify","String","removeItem","exact","path","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23579286.chunk.js","sourcesContent":["import {createContext} from \"react\";\n\nfunction noop() {}\n\nconst AuthContext = createContext({\n\temail: \"\",\n\tlogin: noop as (email: string, password: string) => void,\n\tlogout: noop,\n\tisAuthenticated: false,\n\treceiveOneTimePassword: noop as (value: string) => void,\n\toneTimePasswordReceived: false\n})\n\nexport default AuthContext","import React, {useContext} from 'react'\r\nimport { Form, Input, Button, notification } from 'antd';\r\nimport { useHistory} from 'react-router-dom'\r\nimport AuthContext from \"context/AuthContext\";\r\nimport \"./loginForm.scss\"\r\n\r\nconst LoginForm: React.FC = () => {\r\n\tconst [form] = Form.useForm();\r\n\tconst history = useHistory()\r\n\tconst {login} = useContext(AuthContext)\r\n\r\n\tconst handleFinish = () => {\r\n\t\tconst email = form.getFieldValue('email')\r\n\t\tconst password = form.getFieldValue('password')\r\n\t\ttry\r\n\t\t{\r\n\t\t\tlogin(email, password)\r\n\t\t\thistory.push(\"/confirm\")\r\n\t\t} catch (e: any)\r\n\t\t{\r\n\t\t\tnotification.error({\r\n\t\t\t\tmessage: \"Ошибка\",\r\n\t\t\t\tdescription: e.message,\r\n\t\t\t\tplacement: \"topLeft\"\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='loginForm'>\r\n\t\t\t<Form\r\n\t\t\t\tname=\"basic\"\r\n\t\t\t\tlabelCol={{ span: 8 }}\r\n\t\t\t\twrapperCol={{ span: 16 }}\r\n\t\t\t\tinitialValues={{ remember: true }}\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tonFinish={handleFinish}\r\n\t\t\t\tform={form}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Эл. почта\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\trules={[{ required: true, message: 'Введите почту' }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"Пароль\"\r\n\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\trules={[{ required: true, message: 'Введите пароль' }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password />\r\n\t\t\t\t</Form.Item>\r\n\r\n\t\t\t\t<Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\r\n\t\t\t\t\t\tВойти\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginForm","export default __webpack_public_path__ + \"static/media/pokemon-background.2daf98e6.jpg\";","import React from 'react'\nimport LoginForm from 'components/loginForm/LoginForm';\nimport \"./loginPage.scss\"\nimport pokemon_background from 'images/pokemon-background.jpg'\n\nconst LoginPage: React.FC = () => {\n\treturn (\n\t\t<div style={{\n\t\t\tbackground: `url(${pokemon_background})`,\n\t\t\tbackgroundRepeat: \"no-repeat\",\n\t\t\tbackgroundSize: \"contain\",\n\t\t\tbackgroundPosition: \"bottom\"\n\t\t}} className=\"loginPage\">\n\t\t\t<LoginForm />\n\t\t</div>\n\t)\n}\n\nexport default  LoginPage","import React, {useState, useContext, useEffect} from 'react'\r\nimport {Form, Button, Input, Typography, notification} from 'antd'\r\nimport AuthContext from \"context/AuthContext\";\r\nimport './confirmPage.scss'\r\nimport pokemon_background from 'images/pokemon-background.jpg'\r\n\r\nconst {Text} = Typography\r\n\r\nconst ConfirmPage: React.FC = () => {\r\n\tconst [value, setValue] = useState(\"\")\r\n\tconst {receiveOneTimePassword} = useContext(AuthContext)\r\n\r\n\tconst handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tconst newValue = e.target.value\r\n\t\tif (!isNaN(+newValue) && newValue.length <= 4)\r\n\t\t{\r\n\t\t\tsetValue(newValue)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\"СМС с кодом: 4242\")\r\n\t}, [])\r\n\r\n\tconst handleFinish = () => {\r\n\t\ttry\r\n\t\t{\r\n\t\t\treceiveOneTimePassword(value)\r\n\t\t} catch (e: any)\r\n\t\t{\r\n\t\t\tnotification.error({\r\n\t\t\t\tmessage: \"Ошибка\",\r\n\t\t\t\tdescription: e.message,\r\n\t\t\t\tplacement: \"topLeft\"\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div style={{\r\n\t\t\tbackground: `url(${pokemon_background})`,\r\n\t\t\tbackgroundRepeat: \"no-repeat\",\r\n\t\t\tbackgroundSize: \"contain\",\r\n\t\t\tbackgroundPosition: \"bottom\"\r\n\t\t}} className=\"confirmPage\">\r\n\t\t\t<Form\r\n\t\t\t\tclassName=\"confirmForm\"\r\n\t\t\t\tname=\"confirmForm\"\r\n\t\t\t\tlabelCol={{ span: 8 }}\r\n\t\t\t\twrapperCol={{ span: 24 }}\r\n\t\t\t\tonFinish={handleFinish}\r\n\t\t\t>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Text>Вам выслано смс с 4х-значным кодом. Введите в форму ниже</Text>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item\r\n\t\t\t\t\tlabel=\"СМС-код\"\r\n\t\t\t\t\trequired={true}\r\n\t\t\t\t\trules={[\r\n\t\t\t\t\t\t{len: 4},\r\n\t\t\t\t\t\t{required: true},\r\n\t\t\t\t\t\t{message: \"Пожалуйста, введите код из СМС\"},\r\n\t\t\t\t\t]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input value={value} onChange={handleInputChange}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item wrapperCol={{offset: 5, span: 4}}>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">Ввести</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ConfirmPage","export default __webpack_public_path__ + \"static/media/card_loading.7f402ad9.gif\";","import React, {useEffect, useState, useContext} from 'react';\nimport {Button, Form, Layout, Select, Card, Pagination} from 'antd'\n// @ts-ignore\nimport Animate from 'rc-animate'\nimport {LogoutOutlined} from '@ant-design/icons'\nimport {PokemonTCG} from 'pokemon-tcg-sdk-typescript'\nimport {useHistory} from 'react-router-dom'\nimport AuthContext from \"context/AuthContext\";\nimport loading from 'images/card_loading.gif'\nimport './mainPage.scss'\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {Option} = Select\nconst {Meta} = Card\n\nconst MainPage: React.FC = () => {\n\tconst [form] = Form.useForm()\n\tconst [cards, setCards] = useState([] as PokemonTCG.Card[])\n\tconst [pageSize, setPageSize] = useState(10)\n\tconst [page, setPage] = useState(1)\n\tconst [totalCards, setTotalCards] = useState(0)\n\n\tconst [sets, setSets] = useState([] as PokemonTCG.Set[])\n\tconst [rarities, setRarities] = useState([] as PokemonTCG.Rarity[])\n\tconst [subtypes, setSubtypes] = useState([] as PokemonTCG.Subtype[])\n\tconst [types, setTypes] = useState([] as PokemonTCG.Type[])\n\n\tconst {logout} = useContext(AuthContext)\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tPokemonTCG.getAllSets()\n\t\t\t.then(res => {\n\t\t\t\tsetSets(res)\n\t\t\t})\n\t\tPokemonTCG.getRarities()\n\t\t\t.then(res => {\n\t\t\t\tsetRarities(res)\n\t\t\t})\n\t\tPokemonTCG.getSubtypes()\n\t\t\t.then(res => {\n\t\t\t\tsetSubtypes(res)\n\t\t\t})\n\t\tPokemonTCG.getTypes()\n\t\t\t.then(res => {\n\t\t\t\tsetTypes(res)\n\t\t\t})\n\n\t}, [])\n\n\tconst makeQueryString = (params: any): string => {\n\t\tlet query = ''\n\t\tif (params.set !== \"\")\n\t\t{\n\t\t\tquery += `set.name:\"${params.set}\" `\n\t\t}\n\t\tif (params.rarity !== \"\")\n\t\t{\n\t\t\tquery += `rarity:\"${params.rarity}\" `\n\t\t}\n\t\tif (params.types !== \"\")\n\t\t{\n\t\t\tquery += `types:\"${params.types}\" `\n\t\t}\n\t\tif (params.subtypes !== \"\")\n\t\t{\n\t\t\tquery += `subtypes:\"${params.subtypes}\" `\n\t\t}\n\n\t\treturn query.trim()\n\t}\n\n\tconst handleFilterSubmit = async () => {\n\t\tsetCards([])\n\n\t\tconst set = form.getFieldValue('set');\n\t\tconst rarity = form.getFieldValue('rarity')\n\t\tconst subtypes = form.getFieldValue('subtypes')\n\t\tconst types = form.getFieldValue('types')\n\n\t\tconst params = {\n\t\t\tset, rarity, subtypes, types\n\t\t}\n\n\t\tconst queryString = makeQueryString(params)\n\t\tconst apiURL = new URL(\"https://api.pokemontcg.io/v2/cards\")\n\t\tapiURL.searchParams.append(\"q\", queryString)\n\t\tapiURL.searchParams.append(\"pageSize\", pageSize.toString())\n\t\tapiURL.searchParams.append(\"page\", page.toString())\n\n\t\t//Using fetch instead of PokemonTCG SDK for pagination\n\t\tconst requestInfo = await fetch(apiURL.toString(), {\n\t\t\theaders: {\n\t\t\t\t\"X-Api-Key\": \"693e15a8-e939-447a-90ed-62e15d6758b4\"\n\t\t\t}\n\t\t}).then(res => res.json(),)\n\n\t\tconst totalCount: number = requestInfo.totalCount\n\t\tconst cards: PokemonTCG.Card[] = requestInfo.data\n\n\t\tsetTotalCards(totalCount)\n\t\tsetCards(cards)\n\t}\n\n\tconst handlePaginationChange = (paginationPage: number, paginationPageSize: number | undefined) => {\n\t\tif (page !== paginationPage)\n\t\t{\n\t\t\tsetPage(paginationPage)\n\t\t}\n\t\tif (paginationPageSize && pageSize !== paginationPageSize)\n\t\t{\n\t\t\tsetPageSize(paginationPageSize)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\thandleFilterSubmit()\n\t}, [page, pageSize])\n\n\treturn (\n\t\t<Layout className=\"mainPage\">\n\t\t\t<Header className=\"header\">\n\t\t\t\t<LogoutOutlined onClick={logout} className=\"icon\"/>\n\t\t\t</Header>\n\t\t\t<Content className=\"content\" style={{padding: \"16px 0 0 0\"}}>\n\t\t\t\t<Layout>\n\t\t\t\t\t<Sider width={184} className=\"sider\" breakpoint=\"md\" collapsedWidth={0} zeroWidthTriggerStyle={{position: \"absolute\"}}>\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tclassName=\"siderForm\"\n\t\t\t\t\t\t\tform={form}\n\t\t\t\t\t\t\tname=\"basic\"\n\t\t\t\t\t\t\tlabelCol={{span: 8}}\n\t\t\t\t\t\t\twrapperCol={{span: 16}}\n\t\t\t\t\t\t\tinitialValues={{set: \"\", rarity: \"\", types: \"\", subtypes: \"\"}}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel=\"Set\"\n\t\t\t\t\t\t\t\tname=\"set\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Select defaultValue={\"\"} showSearch>\n\t\t\t\t\t\t\t\t\t<Option value=\"\" key=\"set-any\">Любой</Option>)\n\t\t\t\t\t\t\t\t\t{sets.map(s => <Option value={s.name} key={s.name}>{s.name}</Option>)}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel=\"Редкость\"\n\t\t\t\t\t\t\t\tname=\"rarity\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Select defaultValue={\"\"} showSearch>\n\t\t\t\t\t\t\t\t\t<Option value=\"\" key=\"rarity-any\">Любой</Option>)\n\t\t\t\t\t\t\t\t\t{rarities.map(r => <Option value={r} key={r}>{r}</Option>)}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel=\"Подтипы\"\n\t\t\t\t\t\t\t\tname=\"subtypes\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Select defaultValue={\"\"} showSearch>\n\t\t\t\t\t\t\t\t\t<Option value=\"\" key=\"subtypes-any\">Любой</Option>)\n\t\t\t\t\t\t\t\t\t{subtypes.map(s => <Option value={s} key={s}>{s}</Option>)}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item\n\t\t\t\t\t\t\t\tlabel=\"Типы\"\n\t\t\t\t\t\t\t\tname=\"types\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Select defaultValue={\"\"} showSearch>\n\t\t\t\t\t\t\t\t\t<Option value=\"\" key=\"types-any\">Любой</Option>)\n\t\t\t\t\t\t\t\t\t{types.map(t => <Option value={t} key={t}>{t}</Option>)}\n\t\t\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t\t<Form.Item wrapperCol={{offset: 4, span: 16}}>\n\t\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" onClick={handleFilterSubmit}>\n\t\t\t\t\t\t\t\t\tПрименить фильтр\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Form.Item>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Sider>\n\t\t\t\t\t<Content className=\"mainBar\">\n\t\t\t\t\t\t<div >\n\t\t\t\t\t\t\t<Animate\n\t\t\t\t\t\t\t\tclassName=\"cardsContainer\"\n\t\t\t\t\t\t\t\ttransitionName=\"fade\"\n\t\t\t\t\t\t\t\ttransitionAppear\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{cards.map(c =>\n\t\t\t\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\t\t\t\thoverable\n\t\t\t\t\t\t\t\t\t\tclassName=\"card\"\n\t\t\t\t\t\t\t\t\t\tcover={<>\n\t\t\t\t\t\t\t\t\t\t\t<img src={loading} style={{borderRadius: \"12px\"}}/>\n\t\t\t\t\t\t\t\t\t\t\t<img style={{display: \"none\"}}\n\t\t\t\t\t\t\t\t\t\t\t\t alt={c.name} src={c.images.small}\n\t\t\t\t\t\t\t\t\t\t\t\t onLoad={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t e.currentTarget.previousSibling?.remove()\n\t\t\t\t\t\t\t\t\t\t\t\t\t e.currentTarget.style.display = \"block\"\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</>}\n\t\t\t\t\t\t\t\t\t\tonClick={() => history.push(`/info/${c.id}`)}\n\t\t\t\t\t\t\t\t\t\tkey={c.id}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Meta title={c.name} description={c.artist}/>\n\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Animate>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{totalCards > 0 &&\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\ttotal={totalCards}\n\t\t\t\t\t\t\tshowTotal={(total, range) => `${range[0]}-${range[1]} из ${total} карт`}\n\t\t\t\t\t\t\tdefaultPageSize={pageSize}\n\t\t\t\t\t\t\tcurrent={page}\n\t\t\t\t\t\t\tonChange={handlePaginationChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Content>\n\t\t\t<Footer className=\"footer\">Vlad Design 2021</Footer>\n\t\t</Layout>\n\t)\n}\n\nexport default MainPage","import React, {useContext, useEffect, useState} from 'react'\nimport {useParams, useHistory} from 'react-router-dom'\nimport {PokemonTCG} from 'pokemon-tcg-sdk-typescript'\nimport {Layout, Typography, Descriptions, Divider, Result, Button} from \"antd\";\nimport {LogoutOutlined, RollbackOutlined} from '@ant-design/icons'\nimport './infoPage.scss'\nimport loading from 'images/card_loading.gif'\nimport AuthContext from \"context/AuthContext\";\n\nconst {Text} = Typography\n\nconst {Header, Content, Footer} = Layout;\n\nconst InfoPage: React.FC = () => {\n\tconst {id}: any = useParams()\n\tconst history = useHistory()\n\tconst {logout} = useContext(AuthContext)\n\tconst [pokemonInfo, setPokemonInfo] = useState(undefined as unknown as PokemonTCG.Card)\n\n\tuseEffect(() => {\n\t\tPokemonTCG.findCardByID(id)\n\t\t\t.then(card => setPokemonInfo(card))\n\t}, [id])\n\n\tconst handleBackClick = () => {\n\t\thistory.goBack()\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{id === undefined &&\n\t\t\t\t\t<Result\n\t\t\t\t\t\tstatus=\"404\"\n\t\t\t\t\t\ttitle=\"404\"\n\t\t\t\t\t\tsubTitle=\"Покемона с таким id не существует\"\n\t\t\t\t\t\textra={<Button type=\"primary\" onClick={() => history.push(\"../main\")}>Вернуться на главную</Button>}/>\n\t\t\t}\n\t\t\t{id &&\n\t\t\t<Layout className=\"infoPage\">\n\t\t\t\t<Header className=\"header\">\n\t\t\t\t\t<RollbackOutlined onClick={handleBackClick} className=\"icon\"/>\n\t\t\t\t\t<div style={{flexGrow: 1}}></div>\n\t\t\t\t\t<LogoutOutlined onClick={logout} className=\"icon\"/>\n\t\t\t\t</Header>\n\t\t\t\t<Content className=\"content-wrapper\">\n\t\t\t\t\t<div className=\"left-side\">\n\t\t\t\t\t\t{pokemonInfo && <>\n\t\t\t\t\t\t\t<img className=\"card-image\"\n\t\t\t\t\t\t\t\t key=\"image-loading\"\n\t\t\t\t\t\t\t\t alt={pokemonInfo.name}\n\t\t\t\t\t\t\t\t src={loading}/>\n\t\t\t\t\t\t\t<img className=\"card-image\"\n\t\t\t\t\t\t\t\t key=\"image-loaded\"\n\t\t\t\t\t\t\t\t alt={pokemonInfo.name}\n\t\t\t\t\t\t\t\t src={pokemonInfo.images.large}\n\t\t\t\t\t\t\t\t style={{display: \"none\"}}\n\t\t\t\t\t\t\t\t onLoad={(e) => {\n\t\t\t\t\t\t\t\t \te.currentTarget.previousSibling?.remove()\n\t\t\t\t\t\t\t\t\te.currentTarget.style.display=\"block\"\n\t\t\t\t\t\t\t\t }}\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t<div className=\"attacks-container\">\n\t\t\t\t\t\t\t\t{pokemonInfo.abilities && pokemonInfo.abilities?.map((a: PokemonTCG.Ability) =>\n\t\t\t\t\t\t\t\t\t<Descriptions\n\t\t\t\t\t\t\t\t\t\ttitle={a.name}\n\t\t\t\t\t\t\t\t\t\tcolumn={1}\n\t\t\t\t\t\t\t\t\t\tclassName=\"descriptions\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item key={\"ability-type-${a.name}\"+a.name} label=\"Тип\">{a.type}</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item key={\"ability-text\"+a.name} span={24} label=\"Описание\">{a.text}</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t{pokemonInfo.attacks && pokemonInfo.attacks?.map((a: PokemonTCG.Attack) =>\n\t\t\t\t\t\t\t\t\t<Descriptions\n\t\t\t\t\t\t\t\t\t\ttitle={a.name}\n\t\t\t\t\t\t\t\t\t\tcolumn={2}\n\t\t\t\t\t\t\t\t\t\tclassName=\"descriptions\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item key={\"attack-energy\"+a.name} label=\"Затраты энергии\">{a.convertedEnergyCost}</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item key={\"attack-damage\"+a.name} label=\"Урон\">{a.damage}</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t\t<Descriptions.Item key={\"attack-text\"+a.name} span={24} label=\"Описание\">{a.text}</Descriptions.Item>\n\t\t\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"right-side\">\n\t\t\t\t\t\t{pokemonInfo && <>\n\t\t\t\t\t\t\t<Descriptions column={1} title=\"Информация о покемоне\">\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"pokemon-name\" label=\"Имя покемона\">{pokemonInfo.name}</Descriptions.Item>\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"pokemon-types\" label=\"Типы\">{pokemonInfo.types?.reduce(\n\t\t\t\t\t\t\t\t\t(s: string, t: PokemonTCG.Type) => s + \", \" + t.toString(), \"\").slice(1)}\n\t\t\t\t\t\t\t\t</Descriptions.Item>\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"pokemon-subtypes\" label=\"Подтипы\">{pokemonInfo.subtypes?.reduce(\n\t\t\t\t\t\t\t\t\t(s: string, t: PokemonTCG.Subtype) => s + \", \" + t.toString(), \"\").slice(1)}\n\t\t\t\t\t\t\t\t</Descriptions.Item>\n\n\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t\t<Divider/>\n\t\t\t\t\t\t\t<Descriptions column={1} title=\"Информация о карте\">\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"set\" label=\"Сет\">{pokemonInfo.set.name}</Descriptions.Item>\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"rarity\" label=\"Редкость\">{pokemonInfo.rarity.toString()}</Descriptions.Item>\n\t\t\t\t\t\t\t\t<Descriptions.Item key=\"artist\" label=\"Художник\">{pokemonInfo.artist}</Descriptions.Item>\n\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t\t<Divider/>\n\t\t\t\t\t\t\t<Descriptions column={1}>\n\t\t\t\t\t\t\t\t<Text italic={true}>\n\t\t\t\t\t\t\t\t\t{pokemonInfo.flavorText}\n\t\t\t\t\t\t\t\t</Text>\n\n\t\t\t\t\t\t\t</Descriptions>\n\t\t\t\t\t\t</>}\n\n\t\t\t\t\t</div>\n\t\t\t\t</Content>\n\t\t\t\t<Footer className=\"footer\">Vlad Design 2021</Footer>\n\t\t\t</Layout>\n\t\t\t}\n\t\t</>\n\n\t)\n}\n\nexport default InfoPage","import React, {useEffect, useState} from 'react';\r\nimport {HashRouter as Router, Route, Switch, Redirect} from \"react-router-dom\";\r\nimport 'antd/dist/antd.css';\r\nimport LoginPage from \"pages/login/LoginPage\";\r\nimport ConfirmPage from \"pages/confirm/ConfirmPage\";\r\nimport MainPage from \"pages/main/MainPage\";\r\nimport InfoPage from \"pages/info/InfoPage\";\r\nimport AuthContext from \"context/AuthContext\";\r\nimport './App.scss'\r\n\r\nconst storageName = 'userData'\r\n\r\nfunction App()\r\n{\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst [isAuthenticated, setIsAuthenticated] = useState(false)\r\n\tconst [oneTimePasswordReceived, setOneTimePasswordReceived] = useState(false)\r\n\r\n\tconst login = (email: string, password: string) => {\r\n\t\temail = email.trim()\r\n\t\tpassword = password.trim()\r\n\t\t//should be server checked\r\n\t\tif (email === \"kode@kode.ru\" && password === \"Enk0deng\")\r\n\t\t{\r\n\t\t\tsetEmail(email)\r\n\t\t\tsetIsAuthenticated(true)\r\n\t\t\t// \"true\" since we correctly got here\r\n\t\t\tlocalStorage.setItem(storageName, JSON.stringify({\r\n\t\t\t\temail, isAuthenticated: \"true\", oneTimePasswordReceived: String(oneTimePasswordReceived)\r\n\t\t\t}))\r\n\r\n\t\t} else\r\n\t\t{\r\n\t\t\tthrow Error(\"Такого пользователя не существует\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst logout = () => {\r\n\t\tsetEmail(\"\")\r\n\t\tsetIsAuthenticated(false)\r\n\t\tsetOneTimePasswordReceived(false)\r\n\t\tlocalStorage.removeItem(storageName)\r\n\t}\r\n\r\n\tconst receiveOneTimePassword = (value: string) => {\r\n\t\tif (value === \"4242\")\r\n\t\t{\r\n\t\t\tsetOneTimePasswordReceived(true)\r\n\t\t\tlocalStorage.setItem(storageName, JSON.stringify({\r\n\t\t\t\temail, isAuthenticated: \"true\", oneTimePasswordReceived: \"true\"\r\n\t\t\t}))\r\n\t\t} else\r\n\t\t{\r\n\t\t\tthrow Error(\"Введенный СМС-код не соответствует отправленному на номер телефона\")\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tconst data = JSON.parse(localStorage.getItem(storageName) as string)\r\n\t\tif (data) {\r\n\t\t\tsetEmail(data.email)\r\n\t\t\tsetIsAuthenticated(data.isAuthenticated === \"true\")\r\n\t\t\tsetOneTimePasswordReceived(data.oneTimePasswordReceived === \"true\")\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<AuthContext.Provider value={{\r\n\t\t\t\temail,\r\n\t\t\t\tlogin,\r\n\t\t\t\tlogout,\r\n\t\t\t\treceiveOneTimePassword,\r\n\t\t\t\tisAuthenticated,\r\n\t\t\t\toneTimePasswordReceived\r\n\t\t\t}}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t{isAuthenticated && oneTimePasswordReceived\r\n\t\t\t\t\t\t?\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/main\">\r\n\t\t\t\t\t\t\t\t<MainPage/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/info/:id?\">\r\n\t\t\t\t\t\t\t\t<InfoPage/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Redirect to=\"/main\"/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route path=\"/confirm\">\r\n\t\t\t\t\t\t\t\t<ConfirmPage/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t\t<LoginPage/>\r\n\t\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t\t<Redirect to=\"/\"/>\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t}\r\n\t\t\t\t</Router>\r\n\t\t\t</AuthContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}